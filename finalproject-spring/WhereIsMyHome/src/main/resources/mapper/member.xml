<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_password" property="userPwd" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="join_date" property="joinDate" />
		<result column="token" property="token" />
		<result column="type" property="loginType" />
		<result column="age" property="age" />
	</resultMap>

	<!-- idcheck -->
	<select id="idCheck" parameterType="String" resultType="int">
		select
		count(user_id)
		from members
		where user_id = #{userId}
	</select>

	<!-- modifyMember -->
	<update id="modifyMember" parameterType="memberDto">
		update members
		set
		user_name=#{userName}, user_password=#{userPwd}, email_id=#{emailId},
		email_domain=#{emailDomain}
		where user_id=#{userId}
	</update>

	<!-- joinMember -->
	<insert id="joinMember" parameterType="memberDto">
		insert into members
		(user_id, user_name, user_password, email_id, email_domain, join_date,
		type, age)
		values(#{userId},#{userName},#{userPwd},#{emailId},#{emailDomain},now(),
		#{loginType}, #{age})
	</insert>

	<!-- loginMember -->
	<select id="loginMember" parameterType="memberDto"
		resultMap="member">
		select *
		from members
		where user_id = #{userId} and
		user_password = #{userPwd} and user_name!='탈퇴한 사용자'
	</select>

	<!-- searchPwd -->
	<select id="searchPwd" parameterType="String"
		resultType="String">
		select user_password
		from members
		where user_id=#{userId}
	</select>

	<!-- delMember -->
	<delete id="delMember">
		delete
		from members
		where user_id=#{userId}
	</delete>

	<delete id="delComment">
		delete from comments
		<where>

			user_id=#{userId}
		</where>
	</delete>

	<delete id="delBoard">
		delete from board
		<where>

			user_id=#{userId}
		</where>

	</delete>

	<delete id="delFavoriteApt">
		delete from favorite_apt
		<where>

			user_id=#{userId}
		</where>

	</delete>

	<delete id="delFavoriteDong">
		delete from favorite_dong
		<where>

			user_id=#{userId}
		</where>

	</delete>

	<delete id="delQna">
		delete from qna
		<where>

			user_id=#{userId}
		</where>

	</delete>

	<delete id="delReply">
		delete from reply
		<where>

			user_id=#{userId}
		</where>

	</delete>

	<select id="getMember" parameterType="String" resultMap="member">
		select *
		from members
		where user_id=#{userId}
	</select>



	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select token
		from members
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update members
		set
		token = #{token}
		where user_id = #{userId}
	</update>

	<delete id="deleteRefreshToken" parameterType="map">
		delete
		from members
		where user_id = #{userId}
	</delete>

	<select id="searchEmailUser" parameterType="String"
		resultMap="member">
		select *
		from members
		where email_id=#{emailId} and
		email_domain=#{emailDomain}
	</select>

	<update id="setPassword">
		update members
		set user_password=#{userPwd}
		where
		email_id=#{emailId} and email_domain=#{emailDomain}
	</update>

</mapper>